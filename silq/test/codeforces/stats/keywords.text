//////////////////////////////////////
// Microsoft.Quantum.Convert
//////////////////////////////////////
Call


//////////////////////////////////////
// Microsoft.Quantum.Diagnostics
//////////////////////////////////////
AssertAllZero
AssertAllZeroWithinTolerance
AssertOperationsEqualInPlace
AssertOperationsEqualInPlaceCompBasis
AssertOperationsEqualReferenced
AssertQubit
AssertQubitIsInStateWithinTolerance
AssertQubitWithinTolerance



//////////////////////////////////////
// Microsoft.Quantum.Enviroment
//////////////////////////////////////
GetQubitsAvailableToBorrow
GetQubitsAvailableToUse



//////////////////////////////////////
// Microsoft.Quantum.AmplitudeAmplification
//////////////////////////////////////
AmpAmpRUSByOracle



//////////////////////////////////////
// Microsoft.Quantum.Arithmetic
//////////////////////////////////////
AddConstantFxP
AddFxP
AddI
ApplyLEOperationOnPhaseLE
ApplyLEOperationOnPhaseLEA
ApplyLEOperationOnPhaseLEC
ApplyLEOperationOnPhaseLECA
ApplyPhaseLEOperationOnLE
ApplyPhaseLEOperationOnLEA
ApplyPhaseLEOperationOnLEC
ApplyPhaseLEOperationOnLECA
ApplyReversedOpBE
ApplyReversedOpBEA
ApplyReversedOpBEC
ApplyReversedOpBECA
ApplyReversedOpLE
ApplyReversedOpLEA
ApplyReversedOpLEC
ApplyReversedOpLECA
ApplyXorInPlace
AssertAllZeroFxP
AssertMostSignificantBit
AssertPhaseLessThan
AssertProbInt
Carry
CascadeCCNOT
CascadeCNOT
CompareGreaterThanFxP
CompareGTI
CompareGTSI
CompareUsingRippleCarry
ComputeReciprocalFxP
ComputeReciprocalI
CopyMostSignificantBit
DivideI
EvaluateEvenPolynomialFxP
EvaluateOddPolynomialFxP
EvaluatePolynomialFxP
GreaterThan
IncrementByInteger
IncrementByModularInteger
IncrementPhaseByInteger
IncrementPhaseByModularInteger
InPlaceMajority
Invert2sSI
MAJ
MeasureFxP
MeasureInteger
MultiplyAndAddByModularInteger
MultiplyAndAddPhaseByModularInteger
MultiplyByModularInteger
MultiplyFxP
MultiplyI
MultiplySI
PrepareFxP
RippleCarryAdderCDKM
RippleCarryAdderD
RippleCarryAdderNoCarryTTK
RippleCarryAdderTTK
SquareFxP
SquareI
SquareSI
Sum



//////////////////////////////////////
// Microsoft.Quantum.Arrays
//////////////////////////////////////
ForEach



//////////////////////////////////////
// Microsoft.Quantum.Canon
//////////////////////////////////////
AdiabaticStateEnergyUnitary

AndLadder
ApplyDiagonalUnitary
ApplyIf
ApplyIfA
ApplyIfC
ApplyIfCA
ApplyMultiControlledC
ApplyMultiControlledCA
ApplyPauli
ApplyPauliFromBitString
ApplyQuantumFourierTransform

ApplyQuantumFourierTransformBE

ApplyQuantumFourierTransformLE

ApplyReversedOpBigEndian
ApplyReversedOpBigEndianA
ApplyReversedOpBigEndianC
ApplyReversedOpBigEndianCA
ApplyReversedOpLittleEndian
ApplyReversedOpLittleEndianA
ApplyReversedOpLittleEndianC
ApplyReversedOpLittleEndianCA
ApplyRippleCarryComparatorBE
ApplyRippleCarryComparatorLE

ApplyToEach
ApplyToEachA
ApplyToEachC
ApplyToEachCA
ApplyToEachIndex
ApplyToEachIndexA
ApplyToEachIndexC
ApplyToEachIndexCA
ApplyToFirstQubit
ApplyToFirstQubitA
ApplyToFirstQubitC
ApplyToFirstQubitCA
ApplyToFirstThreeQubits
ApplyToFirstThreeQubitsA
ApplyToFirstThreeQubitsC
ApplyToFirstThreeQubitsCA
ApplyToFirstTwoQubits
ApplyToFirstTwoQubitsA
ApplyToFirstTwoQubitsC
ApplyToFirstTwoQubitsCA
ApplyToPartition
ApplyToPartitionA
ApplyToPartitionC
ApplyToPartitionCA
ApplyToSubregister
ApplyToSubregisterA
ApplyToSubregisterC
ApplyToSubregisterCA
ApplyWith
ApplyWithA
ApplyWithC
ApplyWithCA
ApplyWithInputTransformation
ApplyWithInputTransformationA
ApplyWithInputTransformationC
ApplyWithInputTransformationCA
ApproximateQFT

AssertHighestBit
AssertLessThanPhaseLE

AssertPhase

AssertProbIntBE

CNOTChain
CNOTChainTarget

CopyMostSignificantBitLE

CX
CY
CZ
HY

InPlaceXorBE
InPlaceXorLE
IntegerIncrementLE
IntegerIncrementPhaseLE

IterateThroughCartesianPower
IterateThroughCartesianProduct

MeasureIntegerBE
ModularAddProductLE
ModularAddProductPhaseLE
ModularIncrementLE
ModularIncrementPhaseLE
ModularMultiplyByConstantLE

MultiplexOperations
MultiplexOperationsBruteForceFromGenerator
MultiplexOperationsFromGenerator
MultiplexPauli
MultiplexZ
NoOp
QFT
QFTLE
RAll0
RAll1
SwapReverseRegister

With
WithA
WithC
WithCA

// functions

Bind
BindA
BindC
BindCA

Bound
BoundA
BoundC
BoundCA
CControlled
CControlledA
CControlledC
CControlledCA
ConjugatedBy
ConjugatedByA
ConjugatedByC
ConjugatedByCA

ContinuedFractionConvergent

ControlledOnBitString
ControlledOnInt
CurriedOp

CurryOp

DecomposeIntoTimeStepsCA
EmbedPauli

IsResultOne
IsResultZero

MultiplexerBruteForceFromGenerator
MultiplexerFromGenerator
OperationPow
OperationPowA
OperationPowC
OperationPowCA

PauliFromBitString

RestrictedToSubregister
RestrictedToSubregisterA
RestrictedToSubregisterC
RestrictedToSubregisterCA

RestrictToSubregister
RestrictToSubregisterA
RestrictToSubregisterC
RestrictToSubregisterCA

ResultArrFromBoolArr
ResultAsInt
ResultFromBool

ToOperation
TransformedOperationA
TransformedOperationC
TransformedOperationCA
UncurriedOp
UncurriedOpA
UncurriedOpC
UncurriedOpCA

UncurryOp
UncurryOpA
UncurryOpC
UncurryOpCA

WeightOnePaulis



//////////////////////////////////////
//Microsoft.Quantum.Characterization
//////////////////////////////////////
ContinuousPhaseEstimationIteration
DiscretePhaseEstimationIteration
EstimateFrequency
EstimateFrequencyA
MeasureAllZ
MeasureIdentity
QuantumPhaseEstimation
RobustPhaseEstimation
SingleQubitProcessTomographyMeasurement



//////////////////////////////////////
//Microsoft.Quantum.ErrorCorrection
//////////////////////////////////////

BitFlipDecoder
BitFlipEncoder

DecodeFromBitFlipCode
DecodeFromFiveQubitCode
DecodeFromSteaneCode
EncodeIntoBitFlipCode
EncodeIntoFiveQubitCode
EncodeIntoSteaneCode

FiveQubitCodeDecoder
FiveQubitCodeEncoder

InjectPi4YRotation
KnillDistill
MeasureStabilizerGenerators
Recover
RecoverCSS

SteaneCodeDecoder
SteaneCodeEncoder

BitFlipCode
BitFlipRecoveryFn
FiveQubitCode
FiveQubitCodeRecoveryFn
SteaneCode
SteaneCodeRecoveryFns
SteaneCodeRecoveryX
SteaneCodeRecoveryZ
TableLookupRecovery



//////////////////////////////////////
//Microsoft.Quantum.Measurement
//////////////////////////////////////
MeasurePaulis
MeasureWithScratch
MResetX
MResetY
MResetZ
MultiM



//////////////////////////////////////
//Microsoft.Quantum.Oracles
//////////////////////////////////////

DeterministicStateOracleFromStateOracle
ObliviousOracleFromDeterministicStateOracle
OracleToDiscrete
ReflectionOracleFromDeterministicStateOracle
StateOracleFromDeterministicStateOracle










PrepareUniformSuperposition
ApplyToEach
H
ControlledOnInt
X
ControlledOnBitString
Ry
R1
MeasureInteger
Z
CNOT
Controlled
S
MResetZ
M
Adjoint
WithA
ApplyToEachCA
ApplyToEachC
CCNOT
SWAP
With
ResetAll
adjoint self
adjoint auto
controlled auto
controlled adjoint auto
